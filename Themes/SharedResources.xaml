<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--
    ================================================================
    COLORS and BRUSHES
    Centralized color palette for the application.
    ================================================================
    -->
    <Color x:Key="LightGrayColor">#EEEEEE</Color>
    <Color x:Key="MediumGrayColor">#B0B0B0</Color>
    <Color x:Key="DarkGrayColor">#666666</Color>
    <Color x:Key="TextColor">#333333</Color>

    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource LightGrayColor}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource MediumGrayColor}"/>
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
    <SolidColorBrush x:Key="GrayTextBrush" Color="{StaticResource DarkGrayColor}"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>

    <!--
    ================================================================
    CONTROL STYLES
    Base styles for common controls to ensure consistency.
    ================================================================
    -->

    <!-- Style for the new square icon buttons in the header -->
    <Style x:Key="SquareIconButton" TargetType="Button">
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#F0F0F0"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E0E0E0"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#D0D0D0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for read-only TextBoxes, like those displaying paths -->
    <Style x:Key="ReadOnlyPathTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Base style for standard Buttons -->
    <Style TargetType="Button">
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!-- Base style for GroupBoxes -->
    <Style TargetType="GroupBox">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!-- 
    Style for TreeViewItems to avoid default selection highlight and set padding.
    This prevents code duplication across different views.
    -->
    <Style x:Key="SharedTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Resources>
            <!-- Override the default blue highlight color when a TreeViewItem is selected -->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{DynamicResource {x:Static SystemColors.ControlTextColorKey}}" />
        </Style.Resources>
    </Style>

    <!-- 
    Style for ListViewItems to avoid default selection highlight and set padding.
    -->
    <Style x:Key="SharedListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
